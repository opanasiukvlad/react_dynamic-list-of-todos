{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","props","todos","showModal","selectedTodo","selectTodo","className","map","todo","id","completed","title","type","onClick","TodoFilter","filterOption","setFilter","query","setQuery","onChange","event","target","value","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","useState","user","setUser","useEffect","userId","href","email","name","App","setTodos","todosAreLoaded","setTodosAreLoaded","setShowModal","setSelectedTodo","selectedFilterOption","setSelectedFilterOption","finally","filteredTodos","useMemo","askedTodos","filter","toLowerCase","includes","getFilteredTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.65d22d9a.chunk.js","sourcesContent":["import React from 'react';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[];\n  showModal: (arg: boolean) => void;\n  selectedTodo: Todo | null;\n  selectTodo: (arg: Todo) => void;\n}\n\nexport const TodoList: React.FC<Props> = (props) => {\n  const {\n    todos,\n    showModal,\n    selectedTodo,\n    selectTodo,\n  } = props;\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr\n            data-cy=\"todo\"\n            className=\"\"\n            key={todo.id}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={todo.completed\n                  ? 'has-text-success'\n                  : 'has-text-danger'}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => {\n                  selectTodo(todo);\n                  showModal(true);\n                }}\n              >\n                <span className=\"icon\">\n                  <i className={selectedTodo?.id !== todo.id\n                    ? 'far fa-eye'\n                    : 'far fa-eye-slash'}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\n\ninterface Props {\n  filterOption: string;\n  setFilter: (arg: string) => void;\n  query: string;\n  setQuery: (arg: string) => void;\n}\n\nexport const TodoFilter: React.FC<Props> = (props) => {\n  const {\n    filterOption,\n    setFilter,\n    query,\n    setQuery,\n  } = props;\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(event) => (setFilter(event.target.value))}\n            value={filterOption}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => {\n            setQuery(event.target.value);\n          }}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {query && (\n            // eslint-disable-next-line jsx-a11y/control-has-associated-label\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => {\n                setQuery('');\n                setFilter('all');\n              }}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(1000)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\ninterface Props {\n  showModal: (arg: boolean) => void;\n  selectedTodo: Todo | null;\n  selectTodo: (arg: Todo | null) => void;\n}\n\nexport const TodoModal: React.FC<Props> = (props) => {\n  const { showModal, selectedTodo, selectTodo } = props;\n\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    if (selectedTodo) {\n      getUser(selectedTodo.userId)\n        .then(setUser);\n    }\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {selectedTodo?.id}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                showModal(false);\n                selectTodo(null);\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              { selectedTodo?.completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href={user.email}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useMemo, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\n\nconst getFilteredTodos = (todos: Todo[], filterOption: string, query: string) => {\n  const askedTodos = todos.filter(todo => {\n    return todo.title.toLowerCase().includes(query.toLowerCase());\n  });\n\n  switch (filterOption) {\n    case 'all':\n      return askedTodos;\n    case 'active':\n      return askedTodos.filter(todo => !todo.completed);\n    case 'completed':\n      return askedTodos.filter(todo => todo.completed);\n    default:\n      return askedTodos;\n  }\n};\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [todosAreLoaded, setTodosAreLoaded] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [selectedFilterOption, setSelectedFilterOption] = useState('all');\n  const [query, setQuery] = useState('');\n\n  useEffect(() => {\n    getTodos()\n      .then(setTodos)\n      .finally(() => (setTodosAreLoaded(true)\n      ));\n  }, []);\n\n  const filteredTodos = useMemo(() => {\n    return getFilteredTodos(todos, selectedFilterOption, query);\n  }, [todos, selectedFilterOption, query]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                filterOption={selectedFilterOption}\n                setFilter={setSelectedFilterOption}\n                query={query}\n                setQuery={setQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!todosAreLoaded\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={filteredTodos}\n                    showModal={setShowModal}\n                    selectedTodo={selectedTodo}\n                    selectTodo={setSelectedTodo}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {showModal\n        && (\n          <TodoModal\n            showModal={setShowModal}\n            selectedTodo={selectedTodo}\n            selectTodo={setSelectedTodo}\n          />\n        )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}